[build-system]
build-backend = "scikit_build_core.build"

requires = [ "cython", "numpy", "scikit-build-core" ]

[project]
name = "fastemriwaveforms" #@NAMESUFFIX@

description = "Fast and accurate EMRI Waveforms."

readme = "README.md"

maintainers = [
  { name = "Michael Katz", email = "mikekatz04@gmail.com" },
  { name = "Christian Chapman-Bird", email = "c.chapmanbird@gmail.com" },
]

authors = [
  { name = "Michael Katz" },
  { name = "Lorenzo Speri" },
  { name = "Christian Chapman-Bird" },
  { name = "Alvin J. K. Chua" },
  { name = "Niels Warburton" },
  { name = "Scott Hughes" },
]
requires-python = ">=3.10"

classifiers = [
  "Environment :: GPU :: NVIDIA CUDA",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: C++",
  "Programming Language :: Cython",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
# version is deduced from the lattest git tag
# description is the docstring at the top of src/few/__init__.py
dynamic = [ "version" ]

dependencies = [
  "beartype>=0.21",                        # To access runtime type checks
  "exceptiongroup; python_version<'3.11'", # To access ExceptionGroup with Python 3.10
  "h5py",
  "jsonschema",                            # To validate content of file registry
  "lisaconstants",
  "multispline",
  "numba",
  "numpy",
  "nvidia-ml-py",                          # To detect CUDA version if any
  "platformdirs",                          # To locate config and data dir on all platforms
  "pydantic",                              # To handle citations and references with advanced dataclasses
  "pyyaml",                                # To read file registry
  "requests",                              # To download files automatically
  "rich",                                  # To display downlaod progress bar
  "scipy",
  "tqdm",
  "wrapt",
  #@DEPS_CUPYCUDA@,
  #@DEPS_FEWCORE@,
]

optional-dependencies.doc = [
  "ipykernel",
  "ipython",
  "ipywidgets",
  "myst-parser",
  "nbsphinx",
  "pypandoc",
  "sphinx",
  "sphinx-rtd-theme",
  "sphinx-tippy",
]

optional-dependencies.sampling = [
  "eryn",
  "fastlisaresponse",
  "lisaanalysistools",
  "lisatools",
]

optional-dependencies.testing = [ "matplotlib" ]

urls.Documentation = "https://bhptoolkit.org/FastEMRIWaveforms/html/index.html"
urls.Download = "https://pypi.org/project/fastemriwaveforms/#files"
urls.Homepage = "https://github.com/BlackHolePerturbationToolkit/FastEMRIWaveforms"
urls.Source = "https://github.com/BlackHolePerturbationToolkit/FastEMRIWaveforms"
urls.Tracker = "https://github.com/BlackHolePerturbationToolkit/FastEMRIWaveforms/issues"

scripts.few_citations = "few.cmd.citations:main" #@SKIP_PLUGIN@
scripts.few_files = "few.cmd.files:main"         #@SKIP_PLUGIN@

[tool.setuptools_scm]
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"
version_file = "src/few/_version.py"
#@FALLBACK_VERSION@

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = [
  "src/few/_version.py",
  "src/few/git_version.py",                 #@SKIP_PLUGIN@
  "src/few_backend_cuda11x/git_version.py",
  "src/few_backend_cuda12x/git_version.py",
  "tests/",
]
sdist.exclude = [
  ".devcontainer/",
  ".github/",
  "dataset-preprocessing/",
  "docs/",
  "examples/",
  ".cmake-format.yaml",
  ".gitignore",
  ".pre-commit-config.yaml",
  "src/few/_editable.py",
  "src/few/tests/base.py",
  "src/few/git_version.py.in",
]

wheel.exclude = [
  "**.pyx",
  "**.cu",
  "**.cxx",
  "**.hh",
  "**.h",
  "**.hpp",
  "**/CMakeLists.txt",
  "lib/pkgconfig",
  "lib/cmake",
  "lib/*.so",
  "lib/*.a",
]

[tool.scikit-build.wheel.packages]
few = "src/few"       #@SKIP_PLUGIN@
"few/tests" = "tests" #@SKIP_PLUGIN@

[tool.ruff]

extend-include = [
  "!*.py",
  # Enable Ruff on a white-list approach for now
  "!src/few/files/manager.py",
  "!src/few/files/registry.py",
  "!src/few/utils/config.py",
  "!src/few/utils/exceptions.py",
  "!src/few/utils/globals.py",
]

exclude = [ "examples/Tutorial_FrequencyDomain_Waveforms.ipynb" ]

lint.extend-select = [
  "I",
  "T201", # Fail when "print" is used, to be replaced with logger calls
]

lint.ignore = [ "E741" ]

lint.extend-per-file-ignores."*.ipynb" = [
  "T201",
] # Allow "print" statements in notebooks

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.coverage]
paths.source = [ "src/", "**/site-packages/" ]

report.omit = [
  "*/few/_version.py",
  "*/few/tests/*.py",
  "*/few/git_version.py",
  "*/few_backend_*/git_version.py",
]

[tool.mypy]
always_false = "TYPE_CHECKING_GPU_GUARD"
files = [
  # "src/few/summation/directmodesum.py",
  # "src/few/summation/fdinterp.py",
  "src/few/summation/__init__.py",
  # "src/few/summation/interpolatedmodesum.py",
  # "src/few/summation/base.py",
  # "src/few/summation/aakwave.py",
  # "src/few/utils/constants.py",
  "src/few/utils/geodesic.py",
  # "src/few/utils/config.py",
  # "src/few/utils/citations.py",
  "src/few/utils/typing.py",
  "src/few/utils/baseclasses.py",
  # "src/few/utils/fdutils.py",
  # "src/few/utils/elliptic.py",
  "src/few/utils/mappings/pn.py",
  # "src/few/utils/mappings/kerrecceq.py",
  "src/few/utils/mappings/schwarzecc.py",
  "src/few/utils/mappings/jacobian.py",
  "src/few/utils/mappings/__init__.py",
  "src/few/utils/mappings/common.py",
  # "src/few/utils/modeselector.py",
  # "src/few/utils/ylm.py",
  "src/few/utils/utility.py",
  # "src/few/utils/globals.py",
  # "src/few/utils/exceptions.py",
  "src/few/cmd/citations.py",
  # "src/few/cmd/files.py",
  "src/few/cutils/wrappers.py",
  # "src/few/cutils/__init__.py",
  "src/few/_editable.py",
  "src/few/tests/base.py",
  # "src/few/amplitude/ampinterp2d.py",
  # "src/few/amplitude/romannet.py",
  "src/few/amplitude/__init__.py",
  "src/few/amplitude/base.py",
  "src/few/__init__.py",
  "src/few/waveform/__init__.py",
  # "src/few/waveform/waveform.py",
  # "src/few/waveform/base.py",
  # "src/few/trajectory/integrate.py",
  # "src/few/trajectory/dopr853.py",
  "src/few/trajectory/protocol.py",
  "src/few/trajectory/__init__.py",
  # "src/few/trajectory/inspiral.py",
  # "src/few/trajectory/ode/pn5.py",
  "src/few/trajectory/ode/__init__.py",
  "src/few/trajectory/ode/base.py",
  # "src/few/trajectory/ode/flux.py",
  # "src/few/trajectory/base.py",
  "src/few/_version.py",
  # "src/few/files/registry.py",
  "src/few/files/__init__.py",
  # "src/few/files/manager.py",
]

check_untyped_defs = true

[[tool.mypy.overrides]]
module = [ "cupy.*", "wrapt.*", "scipy.optimize.*", "numba.*" ]
ignore_missing_imports = true
